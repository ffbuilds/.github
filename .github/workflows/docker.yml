---
name: Create and publish a Docker image

on:
  workflow_call:
    inputs:
      # bump: alpine /default: ([\d.]+) # stable/ docker:alpine|^3
      # bump: alpine link "Release notes" https://alpinelinux.org/posts/Alpine-$LATEST-released.html
      alpine_stable:
        type: string
        description: The current stable alpine version
        default: 3.18.3 # stable
        required: false
    secrets:
      APP_ID:
        required: true
      APP_PRIVATE_KEY:
        required: true

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      fail-fast: false
      matrix:
        alpine_version:
          - ${{ inputs.alpine_stable }}
          - edge
        platform:
          - linux/amd64
          - linux/arm64
          - linux/arm/v7
          - linux/arm/v6
        include:
          - platform: linux/amd64
            name: amd64
          - platform: linux/arm64
            name: arm64
          - platform: linux/arm/v7
            name: arm_v7
          - platform: linux/arm/v6
            name: arm_v6

    steps:
      - name: Generate Token
        uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
          permissions: |-
            {"packages": "write"}

      - name: Checkout repository
        uses: actions/checkout@v3.5.3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ steps.generate-token.outputs.token }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-alpine_${{ matrix.alpine_version }}
          flavor: |
           suffix=-${{ matrix.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          build-args: |
            ALPINE_VERSION=${{ matrix.alpine_version }}
          platforms: ${{ matrix.platform }}
          push: ${{ github.event_name == 'push' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha,scope=${{ matrix.name }}-alpine-${{ matrix.alpine_version }}
          cache-to: type=gha,mode=max,scope=${{ matrix.name }}-alpine-${{ matrix.alpine_version }}
          provenance: false

  build-and-push-manfiest:
    if: github.event_name == 'push'
    needs: [build-and-push-image]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        alpine_version:
          - ${{ inputs.alpine_stable }}
          - edge

    steps:
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@818d4b7b91585d195f67373fd9cb0332e31a7175
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}-alpine_${{ matrix.alpine_version }}

      - name: Create and push manifest
        run: |
          TAGS=(${{ steps.meta.outputs.tags }})
          for TAG in "${TAGS[@]}"; do
            docker manifest create ${TAG} \
              ${TAG}-amd64 \
              ${TAG}-arm64 \
              ${TAG}-arm_v7 \
              ${TAG}-arm_v6
            docker manifest push ${TAG}
          done
